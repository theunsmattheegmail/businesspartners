import { MockDataEntitySet } from './entitySet';
import { ODataRequest } from '../request/odataRequest';
import { EntityType, EntitySet, Action } from '@sap-ux/annotation-converter';
import { KeyDefinitions } from './fileBasedMockData';
import { DataAccessInterface } from './common';
/**
 *
 */
export declare class StickyMockEntitySet extends MockDataEntitySet {
    private _currentSessionObject;
    currentUUID: any;
    sessionTimeoutRef: any;
    sessionTimeoutTime: number;
    /**
     * @param rootFolder
     * @param entitySetDefinition
     * @param dataAccess
     * @param generateMockData
     */
    constructor(rootFolder: string, entitySetDefinition: EntitySet | EntityType, dataAccess: DataAccessInterface, generateMockData: boolean);
    /**
     * @param tenantId
     */
    private getSessionObject;
    /**
     * @param tenantId
     * @param objectData
     */
    private setSessionObject;
    /**
     * @param tenantId
     */
    resetSessionTimeout(tenantId: string): any;
    /**
     * @param keyValues
     * @param patchData
     * @param tenantId
     */
    performPATCH(keyValues: KeyDefinitions, patchData: object, tenantId: string): Promise<any>;
    /**
     * @param actionDefinition
     * @param actionData
     * @param odataRequest
     * @param keys
     */
    executeAction(actionDefinition: Action, actionData: object, odataRequest: ODataRequest, keys: Record<string, any>): Promise<any>;
    /**
     * @param keyValues
     * @param asArray
     * @param tenantId
     * @param dontClone
     */
    performGET(keyValues: KeyDefinitions, asArray: boolean, tenantId: string, dontClone?: boolean): any;
}
